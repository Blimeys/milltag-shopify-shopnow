{{ content_for_about }}

{% comment %}
<div class="container">
  <h2 class="block-title">Featured product</h2>
  <div class="row product-listing">
    {% for product in collections["lamp"].products %}<div class="col-xs-6 col-sm-4 col-md-3">{% include "product-grid-item" %}</div>{% endfor %}
  </div>
</div>
<div class="container">
  <h2 class="block-title">Featured product</h2>
  <div class="row product-listing row-view">
    {% for product in collections["lamp"].products %}<div class="col-xs-6 col-sm-4 col-md-3">{% include "product-grid-item" %}</div>{% endfor %}
  </div>
</div>


{% for i in (1..3) %}
	{% assign groupname = group | append: forloop.about %}
	{% for i in (1..10) %}
		{% cycle groupname: "", "", "double-size", "double-size", "", "", "", "", "", "", "", "" %}
	{% endfor %}
{% endfor %}


{% assign _names = 'findel,lamp' | split: ',' %}
{% assign _paglimit = 2 %}

{% comment %}Find longest length of products{% endcomment %}
{% assign collection_with_max_size = collections[_names[0]] %}
{% for c in _names %}
{% if collections[c].products.size > collection_with_max_size.products.size %}{% assign collection_with_max_size = collections[c] %}
{% endif %}
{% endfor %}

{% assign ispaginate = false %}
{% paginate collection_with_max_size.products by _paglimit %}
{% assign _paglimit = paginate.current_page | times: _paglimit %}
{% if paginate.next %}{% assign ispaginate = true %}{% assign paginateurl = paginate.next.url %}
{% endif %}
{% endpaginate %}

<div class="container">
  <div class="row">
    <div class="filter-isotop">
      <div class="button-group nav-tab-filter">
        {% for c in _names %}
        	<button class="button{% if forloop.first %} is-checked{% endif %}" data-filter=".filter{{ forloop.about }}" count="{{ collections[c].products.size }}">{{ collections[c].title }}</button>
        {% endfor %}
      </div>
      <div class="grid">
        {% for c in _names %}
          {% assign groupname = 'group' | append: forloop.about %}
          {% assign num = forloop.about %}
          {% assign collection = collections[c] %}
          {% for product in collection.products limit:_paglimit %}
            <div class="element-item filter{{ num }}{% cycle groupname: "", "", " double-size", " double-size", "", "", "", "", "", "", "", "" %}">
              {% include 'product-grid-item' %}
            </div>
          {% endfor %}
         {% endfor %}
      </div>
      <div class="text-center offset-20 isotop_showmore_js">
        {% if ispaginate %}<a href="{{ paginateurl }}" class="btn">Show More</a>
        {% else %}<a href="#" class="btn disable">No More Product</a>
        {% endif %}
      </div>
    </div>
  </div>
</div>

<script>
  initIsotopNav();
  function getIsotopData(value) {
    var params = {
      type: "get",
      url: value,
      /*beforeSend: function() {
        obj.showPreloader();
      },*/
      success: function(data) {
        //obj.hidePreloader();
        //obj.pageData(data);
        //initIsotopShowmore();
        //e('#centerCol').trigger( "initWishlist" );
        var isotope = ".filter-isotop";
        var $isotope = $(".filter-isotop");
        var $grid = $isotope.find(".grid");
    	var $activeButton = $isotope.find(".is-checked");

        var content = $(data).find(isotope);//
        var $newItems = content.find(".grid").html();

        setTimeout(function(){
          $grid.empty().append( $newItems ).isotope( 'reloadItems' );
          $activeButton.trigger("click");
        }, 200);

      	$(".isotop_showmore_js a").unbind();
        $(".isotop_showmore_js").empty().append(content.find(".isotop_showmore_js").html());

		checkIsotopButton($activeButton);

        initIsotopShowmore();
      },
      error: function(XMLHttpRequest, textStatus) {
        //obj.hidePreloader();
        alert("error")
      }
    }
    jQuery.ajax(params);
  }
  function checkIsotopButton(btn){
	var activeFilter = btn.attr('data-filter');
    var fullsize = btn.attr('count');
    var currentChildrens = $(activeFilter).length;
    $(".isotop_showmore_js a").html(currentChildrens >= fullsize ? "No More Product" : "Show More");
    currentChildrens >= fullsize ? $(".isotop_showmore_js a").addClass("disable") : $(".isotop_showmore_js a").removeClass("disable");
  }
  function initIsotopNav() {
    if($(".filter-isotop").length == 0) return false;
    if($(".filter-isotop").length > 1) {
      $(".isotop_showmore_js").remove();
      return false;
    }

    initIsotopShowmore();
    initIsotopTabs();
  }
  function initIsotopShowmore(){
    $(".isotop_showmore_js a").each(function(){
      $(this).click(function(e){
        e.preventDefault();
        if($(this).hasClass("disable")) return false;
        getIsotopData($(this).attr("href"));
      });
    });
  }
  function initIsotopTabs(){
    $(".filter-isotop .nav-tab-filter button").each(function(){
      $(this).click(function(){
      	checkIsotopButton($(this));
      })
    })
  }
</script>

{% endcomment %}
